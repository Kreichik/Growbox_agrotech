// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Hamed Frogh",
            "email": "your-email@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/promote/{username}": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Only an existing admin can promote other users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Auth"
                ],
                "summary": "Promote a user to admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username to promote",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticate a user and return a JWT token if credentials are valid.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public - Auth"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "User login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/plants": {
            "get": {
                "description": "Get a list of all plants",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public - Plants"
                ],
                "summary": "Get all plants",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PlantListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new plant entry with details like name, seeding date, and harvesting date.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Plants"
                ],
                "summary": "Add a new plant",
                "parameters": [
                    {
                        "description": "Plant data",
                        "name": "plant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Plant"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Plant"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/plants/delete-by-name/{name}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove all plant entries that match the given name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Plants"
                ],
                "summary": "Delete all plants by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plant Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/plants/search": {
            "get": {
                "description": "Search plants based on multiple filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public - Plants"
                ],
                "summary": "Search plants",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plant name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Plant ID",
                        "name": "plant_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "group_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Scientific name",
                        "name": "scientific_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Growth Stage",
                        "name": "growth_stage",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum Growth Days",
                        "name": "min_growth_days",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum Growth Days",
                        "name": "max_growth_days",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit number of results (default 10, max 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Skip number of results",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort field (e.g., name, growth_days)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order asc or desc",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PlantListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/plants/{plant_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update plant information such as seeding date, harvesting date, etc.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Plants"
                ],
                "summary": "Update an existing plant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Plant ID",
                        "name": "plant_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated plant data",
                        "name": "plant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdatePlantRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a plant entry by its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin - Plants"
                ],
                "summary": "Delete a plant",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Plant ID",
                        "name": "plant_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Create a new user account (default role is \\\"user\\\" unless specified).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public - Auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User signup data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid plant data provided"
                }
            }
        },
        "models.LoginResponse": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string",
                    "example": "admin"
                },
                "token": {
                    "type": "string",
                    "example": "your_jwt_token_here"
                }
            }
        },
        "models.Plant": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "floor": {
                    "type": "string"
                },
                "group_id": {
                    "type": "string"
                },
                "growth_days": {
                    "type": "integer"
                },
                "growth_stage": {
                    "type": "string"
                },
                "harvest_date": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "humidity": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "leaf_color": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "plant_id": {
                    "type": "integer"
                },
                "scientific_name": {
                    "type": "string"
                },
                "seeding_date": {
                    "type": "string"
                },
                "temperature": {
                    "type": "number"
                }
            }
        },
        "models.PlantListResponse": {
            "type": "object",
            "properties": {
                "plants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Plant"
                    }
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "models.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Plant updated successfully"
                }
            }
        },
        "models.UpdatePlantRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "floor": {
                    "type": "string"
                },
                "group_id": {
                    "type": "string"
                },
                "growth_days": {
                    "type": "integer"
                },
                "growth_stage": {
                    "type": "string"
                },
                "harvest_date": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "humidity": {
                    "type": "number"
                },
                "leaf_color": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "scientific_name": {
                    "type": "string"
                },
                "seeding_date": {
                    "type": "string"
                },
                "temperature": {
                    "type": "number"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "description": "\"admin\" or \"user\"",
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "MicroTrack API",
	Description:      "This is the backend for MicroTrack application.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
